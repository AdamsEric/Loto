{"version":3,"sources":["components/ui/Button/Button.tsx","components/ui/Button/index.ts","components/ui/CardArea/CardArea.tsx","components/ui/CardArea/index.ts","components/ui/Input/Input.tsx","components/ui/Input/index.ts","components/ui/InputNumber/InputNumber.tsx","components/ui/InputNumber/index.ts","components/ui/NumberArea/NumberArea.tsx","components/ui/NumberArea/index.ts","services/apiConcurso.ts","pages/Lotomania/operacoes/DefinirSorteio.tsx","pages/Lotomania/operacoes/DefinirAposta.tsx","pages/Lotomania/operacoes/Conferencia.tsx","pages/Lotomania/index.ts","pages/Lotomania/Lotomania.tsx","pages/Inicio/Inicio.tsx","pages/Inicio/index.ts","App.tsx","index.tsx"],"names":["StyledButton","styled","ButtonRB","props","variant","css","Button","size","disabled","onClick","children","StyledCard","Card","StyledCardBody","Body","CardArea","StyledInput","Form","Control","Input","Group","controlId","name","Row","className","label","Col","sm","type","defaultValue","maxLength","onChange","event","target","value","StyledInputNumber","numberKeyCodes","actionKeyCodes","InputNumber","id","onKeyDown","isNaN","keyCode","includes","preventDefault","previousId","campo","document","getElementById","focus","StyledNumberArea","span","invalid","NumberArea","number","defaultProps","apiConcurso","axios","create","baseURL","DefinirSorteio","useState","sorteio","concurso","undefined","numeros","setSorteio","exibir","setExibir","keyFormulario","setKeyFormulario","consultandoConcurso","setConsultandoConcurso","useEffect","consultarConcurso","a","get","data","dezenas","renderizarCampoNumero","indice","valor","length","proximoCampo","novoSorteio","novoValor","toNumber","toString","Modal","show","onHide","Header","closeButton","Title","tag","blocking","xs","md","offset","alert","filter","num","uniq","aoConfirmar","DefinirAposta","aposta","setAposta","novaAposta","Conferencia","numerosSorteio","numerosAposta","Alert","lg","map","index","numero","style","fontSize","lineHeight","intersection","Lotomania","chaveSorteio","setChaveSorteio","chaveAposta","setChaveAposta","s","StyledBase","StyledTitle","h4","StyledFooter","div","Inicio","Tabs","defaultActiveKey","Tab","eventKey","title","Footer","href","rel","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.32954934.chunk.js","sourcesContent":["import { Button as ButtonRB } from 'react-bootstrap'\n\nimport styled, { css } from 'styled-components'\n\nconst StyledButton = styled(ButtonRB)`\n  ${props => props.variant === 'primary' && css`\n    background-color: #058ce1;\n    border-color: #058ce1;\n\n    &:hover, &:active, &:focus {\n      background-color: #057ce1;\n      border-color: #057ce1;\n    }\n  `}\n`\n\nconst Button = (props: any) => {\n  return (\n  <StyledButton\n    variant={props.variant || 'primary'}\n    size={props.size || 'md'}\n    disabled={props.disabled}\n    onClick={props.onClick}>\n    {props.children}\n  </StyledButton>\n  )\n}\n\nexport default Button","import Button from './Button'\n\nexport { Button }\nexport default Button","import { Card } from 'react-bootstrap'\n\nimport styled from 'styled-components'\n\nconst StyledCard = styled(Card)`\n  margin: 12px 0px;\n`\n\nconst StyledCardBody = styled(Card.Body)`\n  padding: 0.5rem 1rem;\n`\n\nconst CardArea = (props: any) => {\n  return (\n  <StyledCard>\n    <StyledCardBody>\n      {props.children}\n    </StyledCardBody>\n  </StyledCard>\n  )\n}\n\nexport default CardArea","import CardArea from './CardArea'\n\nexport { CardArea }\nexport default CardArea","import { Form, Col, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\n\ninterface InputProps {\n  label?: string,\n  name: string,\n  defaultValue?: string|number,\n  onChange: Function,\n  maxLength?: number\n}\n\nconst StyledInput = styled(Form.Control)`\n`\n\nconst Input = (props: InputProps) => {\n  return (\n    <Form.Group controlId={props.name}>\n      <Row className='mb-2'>\n        {props.label && (\n          <Col sm={12}>\n            <label>\n              <h6>{props.label}</h6>\n            </label>\n          </Col>\n        )}\n\n        <Col sm={12}>\n          <StyledInput\n            name={props.name}\n            type='text'\n            defaultValue={props.defaultValue || ''}\n            maxLength={props.maxLength}\n            onChange={(event: any) => props.onChange(event.target.value)}\n          />\n        </Col>\n      </Row>\n    </Form.Group>\n  )\n}\n\nexport default Input","import Input from './Input'\n\nexport { Input }\nexport default Input\n","import { Form, Col, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { isNaN } from 'lodash'\n\ninterface InputNumberProps {\n  id?: string,\n  previousId?: string,\n  label?: string,\n  name: string,\n  defaultValue?: string|number,\n  onChange: Function\n}\n\nconst StyledInputNumber = styled(Form.Control)`\n  padding: .375rem 0rem;\n  text-align: center;\n`\n\nconst numberKeyCodes = [\n  48, 96,   // 0\n  49, 97,   // 1\n  50, 98,   // 2\n  51, 99,   // 3\n  52, 100,  // 4\n  53, 101,  // 5\n  54, 102,  // 6\n  55, 103,  // 7\n  56, 104,  // 8\n  57, 105   // 9\n]\n\nconst actionKeyCodes = [\n  8,  // Backspace\n  9,  // Tab\n  16, // Shift\n  37, // ArrowLeft\n  38, // ArrowUp\n  39, // ArrowRight\n  40, // ArrowDown\n  46, // Delete\n]\n\nconst InputNumber = (props: InputNumberProps) => {\n  const onKeyDown = (event: any) => {\n    if (isNaN(event.keyCode) || ![\n      ...numberKeyCodes,\n      ...actionKeyCodes\n    ].includes(event.keyCode)) {\n      event.preventDefault()\n    }\n\n    if (!event.target.value && event.keyCode === 8 && props.previousId) {\n      const campo = document.getElementById(props.previousId)\n\n      if (campo) {\n        campo.focus()\n      }\n    }\n\n    return true\n  }\n\n  return (\n    <Form.Group controlId={props.name}>\n      <Row className='mb-2'>\n        {props.label && (\n          <Col sm={12}>\n            <label>\n              <h6>{props.label}</h6>\n            </label>\n          </Col>\n        )}\n\n        <Col sm={12} className='px-1'>\n          <StyledInputNumber\n            id={props.id}\n            name={props.name}\n            type='number'\n            maxLength=\"2\"\n            defaultValue={props.defaultValue || ''}\n            onKeyDown={(event: any) => onKeyDown(event)}\n            onChange={(event: any) => props.onChange(event.target.value)}\n          />\n        </Col>\n      </Row>\n    </Form.Group>\n  )\n}\n\nexport default InputNumber","import InputNumber from './InputNumber'\n\nexport { InputNumber }\nexport default InputNumber\n","import styled, { css } from 'styled-components'\n\ninterface INumberArea {\n  number: string,\n  invalid?: boolean\n}\n\nconst StyledNumberArea = styled.span <INumberArea> `\n  letter-spacing: 2px;\n  padding: 4px;\n  line-height: 44px;\n  font-size: 14px;\n  border: 1px solid #f99500;\n  background-color: #f99500;\n  color: #ffffff;\n  font-weight: bold;\n  border-radius: 50%;\n\n  ${props => props.invalid && css`\n    background-color: #a2a2a2;\n    border: 1px solid #a2a2a2;\n  `}\n`\n\nconst NumberArea = (props: INumberArea) => {\n  return (\n    <StyledNumberArea {...props}>\n      {props.number}\n    </StyledNumberArea>\n  )\n}\n\nNumberArea.defaultProps = {\n  invalid: false\n}\n\nexport default NumberArea","import NumberArea from './NumberArea'\n\nexport { NumberArea }\nexport default NumberArea\n","import axios from 'axios'\n\nconst apiConcurso = axios.create({\n  baseURL: 'https://loteriascaixa-api.herokuapp.com/api/'\n})\n\nexport default apiConcurso","import { useState, useEffect } from 'react'\nimport { Modal, Form, Row, Col } from 'react-bootstrap'\nimport { toNumber, isNaN, uniq } from 'lodash'\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\n\nimport { Button, Input, InputNumber } from 'src/components/ui'\n\nimport { ISorteio } from 'src/models'\n\nimport apiConcurso from 'src/services/apiConcurso'\n\ninterface IDefinirSorteioProps {\n  sorteio: ISorteio,\n  aoConfirmar(sorteio: ISorteio): void\n}\n\nconst DefinirSorteio = (props: IDefinirSorteioProps) => {\n  const [sorteio, setSorteio] = useState<ISorteio>(props.sorteio || {\n    concurso: undefined,\n    numeros: [\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', ''\n    ]\n  })\n  const [exibir, setExibir] = useState<boolean>(false)\n  const [keyFormulario, setKeyFormulario] = useState(1000)\n  const [consultandoConcurso, setConsultandoConcurso] = useState<boolean>(false)\n\n  const limparNumeros = () => {\n    setSorteio({\n      concurso: sorteio.concurso,\n      numeros: [\n        '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', ''\n      ]\n    })\n    setKeyFormulario(keyFormulario + 1)\n  }\n\n  const confirmarDados = () => {\n    if (isNaN(sorteio?.concurso) || ((sorteio?.concurso || 0) < 1000)) {\n      alert('O número do concurso informado é inválido')\n      return\n    }\n\n    if (sorteio.numeros.filter((num: string) => isNaN(num) || num.length === 0 || num.length > 3).length > 0) {\n      alert('Existe número inválido ou não informado. Verifique os números informados.')\n      return\n    }\n\n    if (uniq(sorteio.numeros).length < 20) {\n      alert('Existe número repetido. Verifique os números informados.')\n      return\n    }\n\n    props.aoConfirmar(sorteio)\n    setExibir(false)\n  }\n\n  useEffect(() => {\n    if (exibir) {\n      if (props.sorteio.concurso) {\n        setSorteio(props.sorteio)\n      }\n    }\n  }, [exibir, props.sorteio])\n\n  const consultarConcurso = async () => {\n    try {\n      setConsultandoConcurso(true)\n      const { data } = await apiConcurso.get(`lotomania/${sorteio.concurso}`)\n      setSorteio({\n        concurso: data.concurso,\n        numeros: data.dezenas\n      })\n    } catch (err: any) { }\n    finally {\n      setConsultandoConcurso(false)\n    }\n  }\n\n  const renderizarCampoNumero = (indice: number) => {\n    return (\n      <InputNumber\n        id={`sorteio-numero-${indice + 1}`}\n        previousId={`sorteio-numero-${indice}`}\n        name={`numero-${indice + 1}`}\n        defaultValue={sorteio?.numeros[indice]}\n        onChange={(valor: string) => {\n          if (valor.length === 2) {\n            const proximoCampo = `sorteio-numero-${indice + 1 + 1}`\n            const campo = document.getElementById(proximoCampo)\n\n            if (campo) {\n              campo.focus()\n            }\n          }\n\n          let novoSorteio = sorteio\n          \n          if (novoSorteio && valor) {\n            let novoValor = toNumber(valor).toString()\n            if (novoValor.length < 2) {\n              valor = `0${novoValor}`\n            }\n          }\n\n          novoSorteio.numeros[indice] = valor\n          setSorteio(novoSorteio)\n        }}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Button\n        size={'sm'}\n        variant={'primary'}\n        onClick={() => setExibir(true)}>\n        Definir sorteio\n      </Button>\n\n      <Modal show={exibir} onHide={() => setExibir(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Definir sorteio</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form key={keyFormulario}>\n            <BlockUi tag='div' blocking={consultandoConcurso}>\n              <Row>\n                <Col xs={4} sm={4} md={3}>\n                  <Input\n                    label={'Concurso'}\n                    name='concurso'\n                    defaultValue={sorteio?.concurso}\n                    maxLength={4}\n                    onChange={(value: string) =>\n                      setSorteio({\n                        ...sorteio,\n                        concurso: toNumber(value),\n                      })\n                    }\n                  />\n                </Col>\n                <Col xs={8} sm={8} md={9} className='d-flex mb-2 align-items-end' >\n                  <Button\n                    disabled={!sorteio.concurso}\n                    onClick={() => consultarConcurso()}>\n                    Consultar concurso\n                  </Button>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={12}>\n                  <label>\n                    <h6>Números</h6>\n                  </label>\n                </Col>\n              </Row>\n\n              {/* Linha 1 */}\n              <Row>\n                <Col xs={{ span: 2, offset: 1 }}>{renderizarCampoNumero(0)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(1)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(2)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(3)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(4)}</Col>\n              </Row>\n\n              {/* Linha 2 */}\n              <Row>\n                <Col xs={{ span: 2, offset: 1 }}>{renderizarCampoNumero(5)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(6)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(7)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(8)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(9)}</Col>\n              </Row>\n\n              {/* Linha 3 */}\n              <Row>\n                \n                <Col xs={{ span: 2, offset: 1 }}>{renderizarCampoNumero(10)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(11)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(12)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(13)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(14)}</Col>\n              </Row>\n\n              {/* Linha 4 */}\n              <Row>\n                <Col xs={{ span: 2, offset: 1 }}>{renderizarCampoNumero(15)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(16)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(17)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(18)}</Col>\n                <Col xs={2}>{renderizarCampoNumero(19)}</Col>\n              </Row>\n\n              <Row className='mt-1'>\n                <Col sm={12} className='d-flex justify-content-between'>\n                  <Button\n                    variant={'secondary'}\n                    onClick={() => limparNumeros()}\n                  >\n                    Limpar números\n                  </Button>\n                  <Button\n                    variant={'primary'}\n                    onClick={() => confirmarDados()}\n                  >\n                    Confirmar\n                  </Button>\n                </Col>\n              </Row>\n            </BlockUi>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default DefinirSorteio;\n","import { useState, useEffect } from 'react'\nimport { Modal, Form, Row, Col } from 'react-bootstrap'\nimport { toNumber, isNaN, uniq } from 'lodash'\n\nimport { Button, InputNumber } from 'src/components/ui'\n\nimport { IAposta } from 'src/models'\n\ninterface IDefinirApostaProps {\n  aposta: IAposta,\n  aoConfirmar(Aposta: IAposta): void\n}\n\nconst DefinirAposta = (props: IDefinirApostaProps) => {\n  const [aposta, setAposta] = useState<IAposta>(props.aposta || {\n    numeros: [\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', ''\n    ]\n  })\n  const [exibir, setExibir] = useState<boolean>(false)\n  const [keyFormulario, setKeyFormulario] = useState(1000)\n\n  const limparNumeros = () => {\n    setAposta({\n      numeros: [\n        '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', ''\n      ]\n    })\n    setKeyFormulario(keyFormulario + 1)\n  }\n\n  const confirmarDados = () => {\n    if (aposta.numeros.filter((num: string) => isNaN(num) || num.length === 0 || num.length > 3).length > 0) {\n      alert('Existe número inválido ou não informado. Verifique os números informados.')\n      return\n    }\n\n    if (uniq(aposta.numeros).length < 50) {\n      alert('Existe número repetido. Verifique os números informados.')\n      return\n    }\n\n    props.aoConfirmar(aposta)\n    setExibir(false)\n  }\n\n  useEffect(() => {\n    if (exibir) {\n      if (props.aposta.numeros[0] !== '') {\n        setAposta(props.aposta)\n      }\n    }\n  }, [exibir, props.aposta])\n\n  const renderizarCampoNumero = (indice: number) => {\n    return (\n      <InputNumber\n        id={`aposta-numero-${indice + 1}`}\n        previousId={`aposta-numero-${indice}`}\n        name={`numero-${indice + 1}`}\n        defaultValue={aposta?.numeros[indice]}\n        onChange={(valor: string) => {\n          if (valor.length === 2) {\n            const proximoCampo = `aposta-numero-${indice + 1 + 1}`\n            const campo = document.getElementById(proximoCampo)\n\n            if (campo) {\n              campo.focus()\n            }\n          }\n\n          let novaAposta = aposta\n          \n          if (novaAposta && valor) {\n            let novoValor = toNumber(valor).toString()\n            if (novoValor.length < 2) {\n              valor = `0${novoValor}`\n            }\n          }\n\n          aposta.numeros[indice] = valor\n          setAposta(novaAposta)\n        }}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Button\n        size={'sm'}\n        variant={'primary'}\n        onClick={() => setExibir(true)}>\n        Definir aposta\n      </Button>\n\n      <Modal show={exibir} onHide={() => setExibir(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Definir aposta</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form key={keyFormulario}>\n            <Row>\n              <Col sm={12}>\n                <label>\n                  <h6>Números</h6>\n                </label>\n              </Col>\n            </Row>\n\n            {/* Linha 1 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(0)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(1)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(2)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(3)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(4)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(5)}</Col>\n            </Row>\n\n            {/* Linha 2 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(6)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(7)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(8)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(9)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(10)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(11)}</Col>\n            </Row>\n\n            {/* Linha 3 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(12)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(13)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(14)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(15)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(16)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(17)}</Col>\n            </Row>\n\n            {/* Linha 4 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(18)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(19)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(20)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(21)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(22)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(23)}</Col>\n            </Row>\n\n            {/* Linha 5 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(24)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(25)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(26)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(27)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(28)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(29)}</Col>\n            </Row>\n\n            {/* Linha 6 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(30)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(31)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(32)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(33)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(34)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(35)}</Col>\n            </Row>\n\n            {/* Linha 7 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(36)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(37)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(38)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(39)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(40)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(41)}</Col>\n            </Row>\n\n            {/* Linha 8 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(42)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(43)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(44)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(45)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(46)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(47)}</Col>\n            </Row>\n\n            {/* Linha 9 */}\n            <Row>\n              <Col xs={2}>{renderizarCampoNumero(48)}</Col>\n              <Col xs={2}>{renderizarCampoNumero(49)}</Col>\n            </Row>\n\n            <Row>\n              <Col sm={12} className='d-flex justify-content-between'>\n                <Button\n                  variant={'secondary'}\n                  onClick={() => limparNumeros()}\n                >\n                  Limpar números\n                </Button>\n                <Button\n                  variant={'primary'}\n                  onClick={() => confirmarDados()}\n                >\n                  Confirmar\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default DefinirAposta\n","import { Row, Col, Alert } from 'react-bootstrap'\nimport { NumberArea } from 'src/components/ui'\nimport { intersection } from 'lodash'\n\ninterface IConferenciaProps {\n  numerosSorteio: Array<string>\n  numerosAposta: Array<string>,\n}\n\nconst Conferencia = (props: IConferenciaProps) => {\n  const numerosValidos = () => {\n    return props.numerosSorteio.filter((a: string) => a === '').length === 0 &&\n      props.numerosAposta.filter((a: string) => a === '').length === 0\n  }\n\n  const quantidadeAcertos = () => {\n    return intersection(props.numerosSorteio, props.numerosAposta).length\n  }\n\n  const acerto = (numero: string) => {\n    return props.numerosSorteio.includes(numero)\n  }\n\n  return (\n    <Row className='text-center'>\n      { !numerosValidos() ? (\n        <Alert className={'my-2 py-2'} variant={'primary'}>\n          Após definir os números do sorteio e da aposta, os resultados serão apresentados.\n        </Alert>\n      ) : (\n        <>\n          <Col sm={12} lg={6}>\n            <div className='mb-3'>Números</div>\n            <Row>\n              { props.numerosAposta.map((num: string, index: number) => {\n                  return (\n                    <Col xs={2} md={1} className='mx-0 px-0'>\n                      <NumberArea invalid={!acerto(num)} key={`${index}-${num}`} number={num}/>\n                      {/* { index % 5 === 4 ? <br /> : null } */}\n                    </Col>\n                  )})\n              }\n            </Row>\n          </Col>\n          <Col>\n            <div className='mb-3'>Quantidade de acertos</div>\n            <div style={{ fontSize: 42, lineHeight: '1.5rem' }}>{ quantidadeAcertos() }</div>\n          </Col>\n        </>\n      ) }\n    </Row>\n  )\n}\n\nexport default Conferencia","import Lotomania from './Lotomania'\n\nexport default Lotomania\n","import { useState } from 'react'\nimport { Row, Col, Alert } from 'react-bootstrap'\nimport { CardArea, NumberArea } from 'src/components/ui'\n\nimport { ISorteio, IAposta } from 'src/models'\n\nimport { DefinirSorteio, DefinirAposta, Conferencia } from './operacoes'\n\nconst Lotomania = () => {\n  const [sorteio, setSorteio] = useState<ISorteio>({\n    concurso: undefined,\n    numeros: [\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', ''\n    ]\n  })\n  const [chaveSorteio, setChaveSorteio] = useState<number>(1000)\n  const [aposta, setAposta] = useState<IAposta>({\n    numeros: [\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', '',\n      '', '', '', '', '', '', '', '', '', ''\n    ]\n  })\n  const [chaveAposta, setChaveAposta] = useState<number>(2000)\n\n  return (\n    <div>\n      <CardArea>\n        <Row>\n          <Col sm={{ span: 6, offset: 3 }} className='text-center'>\n            <h5>Sorteio</h5>\n          </Col>\n          <Col sm={3} className='d-flex justify-content-end'>\n            <DefinirSorteio\n              sorteio={sorteio}\n              aoConfirmar={(s: ISorteio) => {\n                setSorteio(s)\n                setChaveSorteio(chaveSorteio + 1)\n              }}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12} className='mb-2'>\n            Concurso: {sorteio.concurso || 'Não definido'}\n          </Col>\n          <Col sm={12} className='mb-2' key={chaveSorteio}>\n            <div>Números sorteados:</div>\n            <div className='text-center'>\n              <Row>\n                { sorteio.numeros.filter((a: string) => a === '').length > 0 && (\n                    <Col>\n                      <Alert className={'my-2 py-2'} variant={'primary'}>\n                        Utilize o botão \"Definir sorteio\" para preencher os números sorteados\n                      </Alert>\n                    </Col>\n                  )\n                }\n                { sorteio.numeros.filter((a: string) => a === '').length === 0 && (\n                  <Col xs={12} md={{ span: 6, offset: 3 }} className='text-center'>\n                    <Row>\n                      {sorteio.numeros.map((num: string, index: number) => {\n                        return (\n                          <Col xs={2} md={1} className='mx-0 px-0'>\n                            <NumberArea key={`${index}-${num}`} number={num}/>\n                            {/* { index % 5 === 4 ? <br /> : null } */}\n                          </Col>\n                        )\n                      })}\n                    </Row>\n                  </Col>\n                )}\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </CardArea>\n\n      <CardArea>\n        <Row>\n          <Col sm={{ span: 6, offset: 3 }} className='text-center'>\n            <h5>Aposta</h5>\n          </Col>\n          <Col sm={3} className='d-flex justify-content-end'>\n            <DefinirAposta\n              aposta={aposta}\n              aoConfirmar={(a: ISorteio) => {\n                setAposta(a)\n                setChaveAposta(chaveAposta + 1)\n              }}\n            />\n          </Col>\n          <Col sm={12} className='mb-2' key={chaveAposta}>\n            <div>Números apostados:</div>\n            <div className='text-center'>\n              <Row>\n                { aposta.numeros.filter((a: string) => a === '').length > 0 && (\n                    <Col>\n                      <Alert className={'my-2 py-2'} variant={'primary'}>\n                        Utilize o botão \"Definir aposta\" para preencher os números apostados\n                      </Alert>\n                    </Col>\n                  )\n                }\n                { aposta.numeros.filter((a: string) => a === '').length === 0 && (\n                  <Col xs={12} md={{ span: 6, offset: 3 }} className='text-center'>\n                    <Row>\n                      {aposta.numeros.map((num: string, index: number) => {\n                        return (\n                          <Col xs={2} md={1} className='mx-0 px-0'>\n                            <NumberArea key={`${index}-${num}`} number={num}/>\n                          </Col>\n                        )\n                      })}\n                    </Row>\n                  </Col>\n                )}\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </CardArea>\n\n      <CardArea>\n        <Row>\n          <Col sm={12} className='text-center'>\n            <h5>Conferência</h5>\n          </Col>\n          <Col sm={12} className='mb-2'>\n            <Conferencia\n              key={chaveSorteio + chaveAposta}\n              numerosSorteio={sorteio.numeros}\n              numerosAposta={aposta.numeros}\n            />\n          </Col>\n        </Row>\n      </CardArea>\n    </div>\n  )\n}\n\nexport default Lotomania","import { Card, Tabs, Tab } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nimport Lotomania from '../Lotomania'\n\nconst StyledBase = styled(Card)`\n  width: 80%;\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n  }\n`\n\nconst StyledTitle = styled.h4`\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 20px;\n`\n\nconst StyledFooter = styled.div`\n  font-size: 14px;\n  text-align: center;\n  text-align: center;\n  text-decoration: none;\n`\n\nconst Inicio = () => {\n  return (\n    <StyledBase>\n      <Card.Body>\n        <StyledTitle>\n          Conferir apostas - Loterias Caixa\n        </StyledTitle>\n        <Tabs defaultActiveKey='lotomania'>\n          <Tab eventKey=\"lotomania\" title=\"Lotomania\">\n            <Lotomania />\n          </Tab>\n        </Tabs>\n      </Card.Body>\n      <Card.Footer>\n        <StyledFooter>\n          Desenvolvido por Eric Adams. Código aberto e disponível\n          no <a href='https://github.com/AdamsEric/Loto' target='_blank' rel=\"noreferrer\">Github</a>.\n        </StyledFooter>\n      </Card.Footer>\n    </StyledBase>\n  )\n}\n\nexport default Inicio\n","import Inicio from './Inicio'\n\nexport default Inicio\n","import Inicio from './pages/Inicio'\nimport styled from 'styled-components'\n\nconst StyledBase = styled.div`\n  padding: 15px;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  background-color: #058ce1;\n  height: 100vh;\n  overflow-y: auto;\n`\n\nconst App = () => {\n  return (\n    <StyledBase>\n      <Inicio />\n    </StyledBase>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}